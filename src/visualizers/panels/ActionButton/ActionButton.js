/*globals define, _, WebGMEGlobal*/
/**
 * Generated by VisualizerGenerator 1.7.0 from webgme on Tue Jul 23 2019 16:01:03 GMT-0700 (Pacific Daylight Time).
 */

define([
    'panel/FloatingActionButton/FloatingActionButton',
    './Actions'
], function (
    FloatingActionButton,
    Actions,
) {
    'use strict';

    function ActionButton(layoutManager, params) {
        FloatingActionButton.apply(this, arguments);
        this.actions = [];
    }

    ActionButton.prototype = Object.create(FloatingActionButton.prototype);

    ActionButton.prototype.onNodeLoad = function(nodeId) {
        FloatingActionButton.prototype.onNodeLoad.apply(this, arguments);
        this.addActionsForNode(nodeId);
    };

    ActionButton.prototype.addActionsForNode = function(nodeId) {
        // TODO: add entries to this.buttons
        this.actions.forEach(action => delete this.buttons[action.name]);
        this.actions = this.getActionsForNode(nodeId);
        this.actions.forEach(action => this.buttons[action.name] = action);
        this.update();
    };

    ActionButton.prototype.getActionsForNode = function(nodeId) {
        const node = this.client.getNode(nodeId);
        const base = this.client.getNode(node.getMetaTypeId());
        const type = base && base.getAttribute('name');
        return Actions[type] || [];
    };

    return ActionButton;
});
